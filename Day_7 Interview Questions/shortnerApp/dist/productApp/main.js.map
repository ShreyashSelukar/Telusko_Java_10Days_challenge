{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nexport interface Product {\r\n    id: number;\r\n    name: string;\r\n    type: string;\r\n    place: string;\r\n    warranty: number;\r\n  }\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private apiUrl = 'http://localhost:8080/api/products';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.apiUrl);\r\n  }\r\n\r\n  getProduct(id: number): Observable<Product> {\r\n    const url = `${this.apiUrl}/${id}`;\r\n    return this.http.get<Product>(url);\r\n  }\r\n\r\n  createProduct(product: Product): Observable<Product> {\r\n    return this.http.post<Product>(this.apiUrl, product);\r\n  }\r\n\r\n  updateProduct(id: number, product: Product): Observable<Product> {\r\n    const url = `${this.apiUrl}/${id}`;\r\n    return this.http.put<Product>(url, product);\r\n  }\r\n\r\n  deleteProduct(id: number): Observable<void> {\r\n    const url = `${this.apiUrl}/${id}`;\r\n    return this.http.delete<void>(url);\r\n  }\r\n}","import { Component } from '@angular/core';\nimport { ProductService } from './app.service';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'productApp';\n  data:any;\n  constructor(private productService:ProductService){\n\n  }\n  ngOnInit() {\n    this.productService.getProducts().subscribe(\n      (response) => {\n        this.data = response;\n        console.log(this.data);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n\n\n\n}\n","<div class=\"main-container\">\n\n  <div class=\"section-one\">\n    <div class=\"card\">\n      <div class=\"buttons\">\n        <button type=\"button\" id=\"edit-btn\"><img src=\"edit-icon.png\" alt=\"Edit\"></button>\n        <button type=\"button\" id=\"delete-btn\"><img src=\"delete-icon.png\" alt=\"Delete\"></button>\n      </div>\n      <form>\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" name=\"name\" required>\n\n        <label for=\"type\">Type:</label>\n        <input type=\"text\" id=\"type\" name=\"type\" required>\n\n        <label for=\"place\">Place:</label>\n        <input type=\"text\" id=\"place\" name=\"place\" required>\n\n        <label for=\"warranty\">Warranty:</label>\n        <input type=\"number\" id=\"place\" name=\"place\" required>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  </div>\n  <div class=\"section-two\">\n    <div>\n      List of Data Available in Database\n    </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n\n//in place where you wanted to use `HttpClient`\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}